{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/data.ts","webpack:///./src/app/movie-list/movie-list.component.html","webpack:///./src/app/movie-list/movie-list.component.scss","webpack:///./src/app/movie-list/movie-list.component.ts","webpack:///./src/app/shared/movie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <mat-icon>movie</mat-icon>\\n      <h1>Movie Tracker</h1>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n</div>\\n<div class=\\\"container\\\">\\n  <app-movie-list></app-movie-list>\\n</div>\\n\\n\"","module.exports = \"mat-icon {\\n  margin: 0 1em 0 1em; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MovieListComponent } from './movie-list/movie-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieListComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatInputModule,\r\n  MatGridListModule,\r\n  MatToolbarModule,\r\n  MatTableModule,\r\n  MatSnackBarModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatGridListModule,\r\n    MatToolbarModule,\r\n  ],\r\n})\r\nexport class MaterialModule { }\r\n","import { Movie } from './movie.model';\r\n\r\nexport const MOVIE_LIST: Movie[] = [\r\n  {\r\n    id: Math.floor(Math.random() * 1000).toString(),\r\n    title: 'Jurassic Park',\r\n    genre: 'Science Fiction',\r\n    rating: '5',\r\n  },\r\n  {\r\n    id: Math.floor(Math.random() * 1000).toString(),\r\n    title: 'Stargate',\r\n    genre: 'Science Fiction',\r\n    rating: '4',\r\n  },\r\n  {\r\n    id: Math.floor(Math.random() * 1000).toString(),\r\n    title: 'Napoleon Dynamite',\r\n    genre: 'Comedy',\r\n    rating: '5',\r\n  },\r\n];\r\n\r\nexport const GENRE_LIST: string[] = [\r\n  'Action',\r\n  'Comedy',\r\n  'Fantasy',\r\n  'Horror',\r\n  'Science Fiction',\r\n];\r\n","module.exports = \"<mat-table [dataSource]=\\\"movieList\\\" class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"delete\\\">\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      <button mat-raised-button color=\\\"default\\\" (click)=\\\"deleteMovie(element)\\\">Delete</button>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <!-- Title Column -->\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <mat-header-cell *matHeaderCellDef>My favorite movies:</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      <mat-form-field>\\n        <input aria-label=\\\"title\\\" matInput [(ngModel)]=\\\"element.title\\\" (change)=\\\"editMovie(element)\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"select-sm\\\">\\n        <mat-select aria-label=\\\"genre\\\" [(ngModel)]=\\\"element.genre\\\" (selectionChange)=\\\"editMovie(element)\\\">\\n          <mat-option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre\\\">{{ genre }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <!-- Genre Column -->\\n  <ng-container matColumnDef=\\\"genre\\\">\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      <mat-form-field>\\n        <mat-select aria-label=\\\"genre\\\" [(ngModel)]=\\\"element.genre\\\" (selectionChange)=\\\"editMovie(element)\\\">\\n          <mat-option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre\\\">{{ genre }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <!-- Rating Column -->\\n  <ng-container matColumnDef=\\\"rating\\\">\\n    <mat-header-cell *matHeaderCellDef>Rating:</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      <span class=\\\"sr-only\\\">current rating {{ element.rating }} stars</span>\\n      <button aria-label=\\\"set rating to 1 star\\\" mat-icon-button (click)=\\\"setRating(element, 1)\\\">\\n        <mat-icon [color]=\\\"element.rating >= '1' ? 'primary' : 'default'\\\">star</mat-icon>\\n      </button>\\n      <button aria-label=\\\"set rating to 2 stars\\\" mat-icon-button (click)=\\\"setRating(element, 2)\\\">\\n        <mat-icon [color]=\\\"element.rating >= '2' ? 'primary' : 'default'\\\">star</mat-icon>\\n      </button>\\n      <button aria-label=\\\"set rating to 3 stars\\\" mat-icon-button (click)=\\\"setRating(element, 3)\\\">\\n        <mat-icon [color]=\\\"element.rating >= '3' ? 'primary' : 'default'\\\">star</mat-icon>\\n      </button>\\n      <button aria-label=\\\"set rating to 4 stars\\\" mat-icon-button (click)=\\\"setRating(element, 4)\\\">\\n        <mat-icon [color]=\\\"element.rating >= '4' ? 'primary' : 'default'\\\">star</mat-icon>\\n      </button>\\n      <button aria-label=\\\"set rating to 5 stars\\\" mat-icon-button (click)=\\\"setRating(element, 5)\\\">\\n        <mat-icon [color]=\\\"element.rating >= '5' ? 'primary' : 'default'\\\">star</mat-icon>\\n      </button>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n<mat-card class=\\\"mat-elevation-z8\\\">\\n  <h2 mat-subheader>New Movie:</h2>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"newMovieFormGroup\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"enter a title\\\" formControlName=\\\"title\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-select formControlName=\\\"genre\\\" placeholder=\\\"select a genre\\\">\\n          <mat-option *ngFor=\\\"let genre of genreList\\\" value=\\\"{{ genre }}\\\">{{ genre }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-card-actions>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newMovieFormGroup.valid\\\" (click)=\\\"saveMovie()\\\">Save</button>\\n        <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetForm()\\\">Cancel</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"mat-table {\\n  margin: 2em auto;\\n  max-width: 46em;\\n  min-width: 30em; }\\n\\nmat-header-cell {\\n  font-weight: normal;\\n  font-size: 1em;\\n  color: rgba(0, 0, 0, 0.87); }\\n\\nmat-header-cell.mat-column-delete {\\n    max-width: 6.5em; }\\n\\nmat-footer-row, mat-header-row, mat-row {\\n  border-bottom-width: 0; }\\n\\nmat-cell.mat-column-delete {\\n  max-width: 7em; }\\n\\n.select-sm {\\n  display: none; }\\n\\nmat-card {\\n  margin: 2em auto;\\n  max-width: 44em;\\n  min-width: 28em; }\\n\\nmat-card mat-card-content {\\n    padding: 1em; }\\n\\nmat-card mat-form-field {\\n    margin-right: 2em; }\\n\\nmat-card mat-card-actions {\\n    margin-left: 0; }\\n\\nh2 {\\n  margin-bottom: 0; }\\n\\nbutton.mat-icon-button {\\n  width: 2em; }\\n\\nbutton.mat-icon-button mat-icon[ng-reflect-color=\\\"default\\\"] {\\n    color: rgba(0, 0, 0, 0.4); }\\n\\nbutton.mat-icon-button:focus ::ng-deep mat-icon,\\n  button.mat-icon-button mat-icon:hover {\\n    color: #ffa600; }\\n\\nh2 {\\n  font-weight: normal;\\n  font-size: 1em; }\\n\\n/* https://stackoverflow.com/questions/45439313/angular-2-4-how-to-style-angular-material-design-snackbar */\\n\\n::ng-deep snack-bar-container.snack-bar-custom span, ::ng-deep snack-bar-container.snack-bar-custom button {\\n  color: white; }\\n\\n@media only screen and (max-width: 760px) {\\n  mat-cell.mat-column-title {\\n    display: block;\\n    padding-right: 1em; }\\n    mat-cell.mat-column-title mat-form-field {\\n      display: block; }\\n  .mat-column-genre {\\n    display: none; }\\n  mat-footer-row, mat-header-row, mat-row {\\n    border-bottom-width: 1px; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../models/movie.model';\nimport { MovieService } from '../shared/movie.service';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MatTableDataSource, MatSnackBar, MatSnackBarConfig } from '@angular/material';\nimport { GENRE_LIST } from '../models/data';\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.scss']\n})\nexport class MovieListComponent implements OnInit {\n\n  movieList: any;\n  newMovieFormGroup: FormGroup;\n  genreList: string[] = GENRE_LIST;\n  snackBarConfig = new MatSnackBarConfig();\n  displayedColumns: string[] = ['delete', 'title', 'genre', 'rating'];\n\n  constructor(\n    private movieService: MovieService,\n    private fb: FormBuilder,\n    public snackBar: MatSnackBar,\n  ) { }\n\n  ngOnInit() {\n    this.movieService.getMovieList().subscribe(list => {\n      this.movieList = new MatTableDataSource(list);\n    });\n\n    this.newMovieFormGroup = this.fb.group({\n      title: ['', Validators.required],\n      genre: ['', Validators.required],\n    });\n\n    this.snackBarConfig = {\n      duration: 5000,\n      panelClass: 'snack-bar-custom',\n    };\n  }\n\n  get title() { return <AbstractControl>this.newMovieFormGroup.get('title'); }\n  get genre() { return <AbstractControl>this.newMovieFormGroup.get('genre'); }\n\n  deleteMovie(movie: Movie): void {\n    this.movieService.deleteMovie(movie).subscribe(list => {\n      this.movieList = new MatTableDataSource(list);\n      this.snackBar.open('Movie deleted', String.fromCodePoint(0x2713), this.snackBarConfig);\n    });\n  }\n\n  editMovie(movie: Movie): void {\n    this.movieService.editMovie(movie).subscribe(list => {\n      this.movieList = new MatTableDataSource(list);\n      this.snackBar.open('Movie modified', String.fromCodePoint(0x2713), this.snackBarConfig);\n    });\n  }\n\n  setRating(movie: Movie, newValue: number) {\n    const movieToEdit = movie;\n    movieToEdit.rating = newValue.toString();\n    this.editMovie(movieToEdit);\n  }\n\n  saveMovie(): void {\n    const movie: Movie = {\n      id: Math.floor(Math.random() * 1000).toString(),\n      title: this.title.value,\n      genre: this.genre.value,\n    };\n\n    this.movieService.saveMovie(movie).subscribe(list => {\n      this.movieList = new MatTableDataSource(list);\n      this.snackBar.open('Movie saved', String.fromCodePoint(0x2713), this.snackBarConfig);\n      this.resetForm();\n    });\n  }\n\n  resetForm(): void {\n    this.title.reset();\n    this.genre.reset();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Movie } from '../models/movie.model';\nimport { MOVIE_LIST } from '../models/data';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  constructor() { }\n\n  getMovieList(): Observable<Movie[]> {\n    return new Observable((observer) => {\n      observer.next(MOVIE_LIST);\n      observer.complete();\n    }); // simulate async http request\n  }\n\n  saveMovie(movie: Movie): Observable<Movie[]> {\n    MOVIE_LIST.push(movie);\n    return new Observable((observer) => {\n      observer.next(MOVIE_LIST);\n      observer.complete();\n    }); // simulate async http request\n  }\n\n  editMovie(movie: Movie): Observable<any> {\n    const movieIndex = MOVIE_LIST.findIndex(item => item.id === movie.id);\n\n    return new Observable((observer) => {\n      if (MOVIE_LIST[movieIndex].title !== movie.title) {\n        observer.error('Protected property');\n      } else {\n        MOVIE_LIST[movieIndex] = movie;\n        observer.next(MOVIE_LIST);\n        observer.complete();\n      }\n    }); // simulate async http request\n  }\n\n  deleteMovie(movie: Movie): Observable<Movie[]> {\n    const movieIndex = MOVIE_LIST.findIndex(item => item.id === movie.id);\n\n    return new Observable((observer) => {\n      MOVIE_LIST.splice(movieIndex, 1);\n      observer.next(MOVIE_LIST);\n      observer.complete();\n    }); // simulate async http request\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}